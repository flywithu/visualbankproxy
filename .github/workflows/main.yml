# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    tags:
      - 'v*'
      - 'r*'
  pull_request:
    branches: [ main ]


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup JDK
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Run Tests
        run: bash ./gradlew test --debug
#  debugapk:
#    name: Generate APK
#    needs: test
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v1
#      - name: Setup JDK
#        uses: actions/setup-java@v1
#        with:
#          java-version: 1.8
#      - name: Build APK
#        run: bash ./gradlew assembleDebug --stacktrace
#      - name: Upload APK
#        uses: actions/upload-artifact@v1
#        with:
#          name: apk
#          path: app/build/outputs/apk/debug/app-debug.apk

  apk:
    name: Generate release APK
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup JDK
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build release APK(launcher)
        run: bash ./gradlew assembleLauncherRelease --stacktrace
      - name: Build release APK(nolauncher)
        run: bash ./gradlew assemblenoLauncherRelease --stacktrace

      - name: Sign(launcher)
        uses: r0adkll/sign-android-release@v1
        id: launcher_app
        with:
          releaseDirectory: app/build/outputs/apk/launcher/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Sign(nolauncher)
        uses: r0adkll/sign-android-release@v1
        id: nolauncher_app
        with:
          releaseDirectory: app/build/outputs/apk/nolauncher/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Upload APK
        uses: actions/upload-artifact@v2
        with:
          name: apk
          path: |
              ${{steps.nolauncher_app.outputs.signedReleaseFile}}
              ${{steps.launcher_app.outputs.signedReleaseFile}}
          if-no-files-found: error
  publish:
    name: Release APK
    needs: apk
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Download APK from build
        uses: actions/download-artifact@v2
        with:
          name: apk
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ReleaseAPK release ${{ github.ref }}
      - name: Display structure of downloaded files
        run: ls -R
      - name: Upload Release APK
        id: upload_release_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: apk/launcher/release/app-launcher-release-unsigned-signed.apk
          asset_name: visualbankproxy.apk
          asset_content_type: application/zip